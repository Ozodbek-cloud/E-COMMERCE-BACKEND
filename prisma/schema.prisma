generator client {
  provider = "prisma-client-js"
}

enum Roles {
  User
  Customer
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  firstName    String
  lastName     String
  email        String
  role         Roles
  password     String
  avatar       String?        @default("default-avatar.png")
  createdAt    DateTime       @default(now())
  Likes        Likes[]
  Contact      Contact[]
  Accomadation Accomadation[]
  Rating       Rating[]
}

model Likes {
  id            Int          @id @default(autoincrement())
  like          Boolean
  userId        String
  accomadtionId String
  user          User         @relation(fields: [userId], references: [id])
  accomadation  Accomadation @relation(fields: [accomadtionId], references: [id])
}

model Contact {
  id            String       @id @default(uuid())
  date          DateTime
  time          String
  phone         String
  email         String
  message       String
  userId        String
  accomadtionId String
  user          User         @relation(fields: [userId], references: [id])
  accomadation  Accomadation @relation(fields: [accomadtionId], references: [id])
}

model Accomadation {
  id              String    @id @default(uuid())
  img             String? 
  isActive        Boolean
  listing_type    Boolean
  title           String
  address         String
  features        Int
  price           Int
  dissccount      Int
  build_year      Int
  description     String
  documents       Json?
  map_url         String
  latitude        Float
  longitude       Float
  country         String
  extra_features  Int
  userId          String
  categoryId      Int
  propertyId      String?
  parentProperty  String?
  status          String?
  label           String?
  material        String?
  rooms           Int?
  beds            Int?
  baths           Int?
  garages         Int?
  homeAreaSqft    Int?
  lotDimensions   String?
  lotAreaSqft     Int?
  pricePrefix     String?
  priceSuffix     String?
  priceCustom     String?
  region          String?
  friendlyAddress String?
  featuredImage   String?
  gallery         String[]
  attachment      String?
  videoLink       String?
  virtualTour     String?
  barbeque        Boolean?
  microwave       Boolean?
  fireplace       Boolean?
  parking         Boolean?
  dryer           Boolean?
  outdoorShower   Boolean?
  petsAllowed     Boolean?
  doorman         Boolean?
  energyClass     String?
  energyIndex     Int?
  createdAt       DateTime?
  updatedAt       DateTime?
  User            User      @relation(fields: [userId], references: [id])
  Likes           Likes[]
  Contact         Contact[]
  Rating          Rating[]
  Category        Category  @relation(fields: [categoryId], references: [id])
}

model Rating {
  id            Int          @id @default(autoincrement())
  clean         Float
  location      Float
  communicate   Float
  userId        String
  accomadtionId String
  user          User         @relation(fields: [userId], references: [id])
  accomadation  Accomadation @relation(fields: [accomadtionId], references: [id])
}

model Category {
  id       Int    @id @default(autoincrement())
  name     String
  img      String
  icon_img String

  Accomadation Accomadation[]
}
